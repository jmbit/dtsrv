package web

import (
	"github.com/docker/docker/api/types"
  "fmt"
  "strings"
	"time"
  )


templ Index(cts []types.Container) {
  @Base("Home") {
    <h1>dtsrv</h1>
    <div hx-target="this" hx-swap="outerHTML">
    <button hx-post="/start">Start new Container</button>
    </div>
    if len(cts) > 0 {    
    <div>
    <h2>Existing Sessions</h2>
    <table>
      <thead>
        <tr>
        <th>Name</th>
        <th>Image</th>
        <th>Created</th>
        <th>Status</th>
        <th>Stop</th>
        </tr>
      </thead>
      <tbody>
        for _, ct := range cts {
            if ct.State == "running" {
              @indexContainerRow(ct)
            }
          }

      </tbody>
      </table>
    </div>
    }
  }
}

templ Start(uuid string) {
<div hx-trigger="done" hx-get={ fmt.Sprintf("/view/%s/", uuid) } hx-swap="outerHTML" hx-target="this">
  <h3>Waiting for Container</h3>
  @StartSpinner(uuid)
</div>
}

templ StartSpinner(uuid string) {
 <div
    hx-get={fmt.Sprintf("/status/%s", uuid)}
    hx-trigger="every 1200ms"
    hx-target="this"
    hx-swap="innerHTML">
    <img src="assets/img/sealspin.gif" alt="a spinning seal"/>
  </div>
}

templ indexContainerRow(ct types.Container) {
  <tr>
    <td>
      <a href={templ.URL(fmt.Sprintf("/view%s/", ct.Names[0]))}>
      {strings.TrimPrefix(ct.Names[0], "/")}
      </a>
    </td>
    <td>{ct.Image}</td>
    <td>{time.Unix(ct.Created, 0).Format(time.RFC822)}</td>
    <td>{ct.State}</td>
    <td>
        <button 
        hx-get={fmt.Sprintf("/index?ctName=%s&action=stop", strings.TrimPrefix(ct.Names[0], "/"))}
        hx-swap="outerHTML"
        hx-target="closest tr"
        >
          END</button>
    </td>
  </tr>
}
